package models

import "time"

type GitEvent struct {
	EventID      string    `json:"id" example:"2489651062"`                                           // This field determines the id of the event generated by github
	Type         string    `json:"type" example:"PushEvent"`                                          // This field determines the type of the event
	GitUserName  string    `json:"actor.login"`                                                       // This field determines the username of the repo owner that has issued the event
	GitRepoName  string    `json:"repo.name" example:"winterbe/streamjs"`                             // This field determines the name of repository where the event is issued in
	GitRepoURL   string    `json:"repo.url" example:"https://api.github.com/repos/winterbe/streamjs"` // This field determines the URL of the Git Repo where the event is issued in
	Public       bool      `json:"public" example:"true"`                                             // This field determines whether the repo is public or not. True: The repo is public
	CreatedAt    time.Time `json:"created_at" example:"2015-01-01T15:00:03Z"`                         // This field determines the date when the event is issued
	CommitsCount int       `json:"commit_count" example:"3"`                                          // This field determines how many commits the event contains
}

type Commits struct {
	CommitsList []interface{} `json:"payload.commits"`
}
